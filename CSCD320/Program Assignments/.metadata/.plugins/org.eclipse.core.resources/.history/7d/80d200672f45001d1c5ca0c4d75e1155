package prog1;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.Scanner;

public class OS_Finding {
	
	static int[] a;
	
	private static int randomizedPartition(int left, int right) {
		int i = (int) Math.floor(Math.random()*(a.length));
		swap(i, right);
		return partition(left, right);
	}
	
	private static int partition(int left, int right) {
		int pivot = a[right];
		int index = left;
		for(int i = left; i < right; i++) {
			if(a[i] <= pivot) {
				swap(index, i);
				index++;
			}
		}
		swap(index, right);
		return index;
	}

	private static void swap(int i, int j) {
		int temp = a[i];
		a[i] = a[j];
		a[j] = temp;
	}
	
	private static int randomizedSelect(int p, int r, int i) {
		if(p == r) {
			return a[p];
		}
		int q = randomizedPartition(p, r);
		int k = q - p + 1;
		if(i == k) {
			return a[q];
		} else if(i < k) {
			return randomizedSelect(p, q-1, i);
		} else {
			return randomizedSelect(q+1, r, i-k);
		}
	}

	public static void main(String[] args) {
		File data = new File(args[0]);
		int index = 0, lines = 0;
		try (BufferedReader read = new BufferedReader(new FileReader(data))) {
			while(read.readLine() != null) lines++;
		} catch (IOException e) {
			e.printStackTrace();
		}
		a = new int[lines];
		Scanner fscan = null;
		try {
			fscan = new Scanner(data);
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
		while(fscan.hasNext()) {
			a[index] = fscan.nextInt();
			index++;
		}
		int i = Integer.parseInt(args[1]);
		int res = randomizedSelect(0, lines-1, i);
		System.out.println(res);
	}
}
